# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI - Build Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: 
      - main
    paths:
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Build with Maven
      run: mvn clean install -DskipTests

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
    - name: Extract project version
      id: extract_version
      run: |
          cd book-network
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
    - name: Login with DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}  
    - name: Build & Push to DockerHub
      uses: docker/build-push-action@v5
      with:
        file: backend/Dockerfile
        push: true
        platform: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKER_USERNAME }}/backend:${{ steps.extract_version.outputs.VERSION }}
        build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
